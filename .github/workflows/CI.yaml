name: CI

on:
  workflow_dispatch:
  pull_request:
    branches:
      - 'release'
    types:
      - closed

env:
  IMAGE: ${{ vars.NCR_REGISTRY }}/del-app
  IMAGE_TAG: ${{ vars.NCR_REGISTRY }}/del-app:latest

jobs:
  lint:
    name: Check lint (black)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install black
        run: pip install black

      - name: Check black
        run: black --check app

  build_push_to_ncp:
    needs: lint

    name: Build Image
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to NCR
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.NCP_CONTAINER_REGISTRY }}
          username: ${{ secrets.NCP_ACCESS_KEY }}
          password: ${{ secrets.NCP_SECRET_KEY }}

      - name: Get current timestamp    
        id: timestamp
        run: echo "timestamp=$(date '+%s')" >> "$GITHUB_OUTPUT"
      
      - name: Get version
        if: startsWith(github.ref, 'refs/tags')
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"
      
      - name: bulid and push refs/heads
        if: startsWith(github.ref, 'refs/heads')
        uses: docker/build-push-action@v4
        with:
            context: app
            tags: "${{ env.IMAGE }}:${{ steps.timestamp.outputs.timestamp }}"
            push: true

      - name: bulid and push refs/tags  
        if: startsWith(github.ref, 'refs/tags')
        uses: docker/build-push-action@v4
        with:
            context: app
            tags: "${{ env.IMAGE }}:${{ steps.version.outputs.VERSION }}"
            push: true
      
      - name: action-slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: DELIVERY BOT
          fields: repo, commit, message, author
          mention: here
          if_mention: failure,cancelled
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 
        if: always()